summary(pokemon.subsample)
## raw difference in mean HP
dragon <- pokemon.subsample[pokemon.subsample$Type1 == "Dragon",]
bug <- pokemon.subsample[pokemon.subsample$Type1 == "Bug",]
mean(dragon$HP)
mean(bug$HP)
mean(dragon$HP) - mean(bug$HP)
bug <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_bug = mean(HP, na.rm = TRUE), n_bug = n()) %>%
ungroup()
dragon <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_dragon = mean(HP, na.rm = TRUE), n_dragon = n()) %>%
ungroup()
bug <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_bug = mean(HP, na.rm = TRUE), n_bug = n()) %>%
ungroup()
## raw difference in mean HP
dragon <- pokemon.subsample[pokemon.subsample$Type1 == "Dragon",]
bug <- pokemon.subsample[pokemon.subsample$Type1 == "Bug",]
mean(dragon$HP)
mean(bug$HP)
mean(dragon$HP) - mean(bug$HP)
## difference in mean HP with a focus on bug pokemon
bug <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_bug = mean(bug$HP, na.rm = TRUE), n_bug = n()) %>%
ungroup()
dragon <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_dragon = mean(HP, na.rm = TRUE), n_dragon = n()) %>%
ungroup()
bug <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_bug = mean(bug$HP, na.rm = TRUE), n_bug = n()) %>%
ungroup()
bug
## raw difference in mean HP
dragon <- pokemon.subsample[pokemon.subsample$Type1 == "Dragon",]
bug <- pokemon.subsample[pokemon.subsample$Type1 == "Bug",]
mean(dragon$HP)
mean(bug$HP)
mean(dragon$HP) - mean(bug$HP)
bug
bug <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_bug = mean(HP, na.rm = TRUE), n_bug = n()) %>%
ungroup()
bug
dragon <- pokemon.subsample[pokemon.subsample$Type1 == "Dragon",]
dragon <- dragon %>%
group_by(Generation) %>%
summarise(avg_HP_dragon = mean(HP, na.rm = TRUE), n_dragon = n()) %>%
ungroup()
df <- full_join(bug, dragon, by = "Generation")
df
dragon
pokemon.subsample <- pokemon.data %>%
filter ( Type1 %in% c("Dragon", "Bug")) %>%
select (Name, Generation, Type1, HP )
head(pokemon.subsample)
summary(pokemon.subsample)
## raw difference in mean HP
dragon <- pokemon.subsample[pokemon.subsample$Type1 == "Dragon",]
bug <- pokemon.subsample[pokemon.subsample$Type1 == "Bug",]
mean(dragon$HP)
mean(bug$HP)
mean(dragon$HP) - mean(bug$HP)
## difference in mean HP with a focus on bug pokemon
bug <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_bug = mean(HP, na.rm = TRUE), n_bug = n()) %>%
ungroup()
dragon <- dragon %>%
group_by(Generation) %>%
summarise(avg_HP_dragon = mean(HP, na.rm = TRUE), n_dragon = n()) %>%
ungroup()
df <- full_join(bug, dragon, by = "Generation")
(1/sum()) * sum(df$n_bug * (df$avg_HP_bug - df$avg_HP_dragon))
df
dragon
df <- df %>%
mutate(mean_diff = coalesce(avg_HP_bug, 0) - coalesce(avg_HP_dragon, 0))
df
## difference in mean HP with a focus on bug pokemon
bug <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_bug = mean(HP, na.rm = TRUE), n_bug = n()) %>%
ungroup()
pokemon.subsample <- pokemon.data %>%
filter ( Type1 %in% c("Dragon", "Bug")) %>%
select (Name, Generation, Type1, HP )
head(pokemon.subsample)
summary(pokemon.subsample)
## raw difference in mean HP
dragon <- pokemon.subsample[pokemon.subsample$Type1 == "Dragon",]
bug <- pokemon.subsample[pokemon.subsample$Type1 == "Bug",]
mean(dragon$HP)
mean(bug$HP)
mean(dragon$HP) - mean(bug$HP)
## difference in mean HP with a focus on bug pokemon
bug <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_bug = mean(HP, na.rm = TRUE), n_bug = n()) %>%
ungroup()
dragon <- dragon %>%
group_by(Generation) %>%
summarise(avg_HP_dragon = mean(HP, na.rm = TRUE), n_dragon = n()) %>%
ungroup()
df <- full_join(bug, dragon, by = "Generation")
df <- df %>%
mutate(mean_diff = coalesce(avg_HP_bug, 0) - coalesce(avg_HP_dragon, 0))
(1/sum(n_bug)) * sum(df$n_bug * df$mean_diff)
pokemon.subsample <- pokemon.data %>%
filter ( Type1 %in% c("Dragon", "Bug")) %>%
select (Name, Generation, Type1, HP )
head(pokemon.subsample)
summary(pokemon.subsample)
## raw difference in mean HP
dragon <- pokemon.subsample[pokemon.subsample$Type1 == "Dragon",]
bug <- pokemon.subsample[pokemon.subsample$Type1 == "Bug",]
mean(dragon$HP)
mean(bug$HP)
mean(dragon$HP) - mean(bug$HP)
## difference in mean HP with a focus on bug pokemon
bug <- bug %>%
group_by(Generation) %>%
summarise(avg_HP_bug = mean(HP, na.rm = TRUE), n_bug = n()) %>%
ungroup()
dragon <- dragon %>%
group_by(Generation) %>%
summarise(avg_HP_dragon = mean(HP, na.rm = TRUE), n_dragon = n()) %>%
ungroup()
df <- full_join(bug, dragon, by = "Generation")
df <- df %>%
mutate(mean_diff = coalesce(avg_HP_bug, 0) - coalesce(avg_HP_dragon, 0))
(1/sum(df$n_bug)) * sum(df$n_bug * df$mean_diff)
mod.simple <- lm(HP ~ Type1, data = pokemon.subsample)
summary(mod.simple)
ggplot(pokemon.subsample, aes(x = Type1, y = HP, color = Type1)) +
geom_jitter(width = 0.3, alpha = 0.5) +
geom_point(aes(y = fitted(mod.simple)), color = "black", shape = 1, size = 2) +
theme_minimal() +
labs(title = "HP by Pokemon Type", x = "Type", y = "HP")
mod.interaction1 <- lm(Speed ~ SP_Attack + Type1 + SP_Attack*Type1, data = pokemon.data)
mod.interaction1
mod.interaction1 <- lm(Speed ~ SP_Attack + Type1 + SP_Attack*Type1, data = pokemon.data)
summary(mod.interaction1)
mod.interaction2 <- lm(Speed ~ SP_Defense + Type1 + SP_Defense*Type1, data = pokemon.data)
summary(mod.interaction2)
mplot(mod.interaction1, which = 2)
hist(mod.interaction21$residuals, prob = TRUE, breaks = 20, col = "lightcoral", main = "Residual Histogram")
hist(mod.interaction1$residuals, prob = TRUE, breaks = 20, col = "lightcoral", main = "Residual Histogram")
grid = sort(mod.interaction1$residuals)
lines(grid,
dnorm(grid,
mean = mean(mod.interaction1$residuals),
sd = sd(mod.interaction1$residuals)),
col = 'maroon', lwd = 2)
mplot(mod.interaction1, which = c(1, 3))
mod.simple <- lm(Speed ~ SP_Defense, data = pokemon.data)
coef_hp <- coef(mod.simple)["SP_Defense"]
se_hp <- summary(mod.simple)$coefficients["SP_Defense", "Std. Error"]
df <- mod.simple$df.residual
t_critical <- qt(1 - 0.05 / 2, df)
lower_bound <- coef_hp - t_critical * se_hp
upper_bound <- coef_hp + t_critical * se_hp
lower_bound
upper_bound
boot_fn <- function(data, indices) {
d <- data[indices, ]
fit <- lm(Speed ~ SP_Defense, data = d)
return(coef(fit))
}
set.seed(123)
boot_results <- boot(data = pokemon.data, statistic = boot_fn, R = 1000)
set.seed(123)
boot_results <- boot(data = pokemon.data, statistic = boot_fn, R = 10000)
boot_results
library(gmm)
data("nsw")
head(nsw)
summary(nsw)
library(gmm)
data("nsw")
head(nsw)
summary(nsw)
treat <- nsw[nsw$treat == 1,]
untreat <- nsw[nse$treat == 0,]
treat <- nsw[nsw$treat == 1,]
untreat <- nsw[nsw$treat == 0,]
mean(treat$re1978)
mean(untreat$re1978)
mean(treat$re1978)  - mean(untreat$re1978)
treat <- nsw$treat == 1
treat
treat <- subset(nsw, treat == 1)
untreat <- subset(nsw, treat == 1)
mean(treat$re1978)
mean(untreat$re1978)
mean(treat$re1978)  - mean(untreat$re1978)
## HW 1-4
library(tidyverse)
library(ggplot2)
library(dplyr)
## HW 6 - Cross Validation
library(mosaic)
library(mosaicData)
library(leaps)
library(caret)
library(ISLR2)
## HW 7 - Confidence Intervals for Regression Modeling
library(datasets)
library(boot)
library(lmtest) # sandwich package
## HW 8 - Diagnostic Plots
library(experimentr)
library(datasets)
treat <- nsw %>%
filter(treat = 1)
treat <- nsw %>%
filter(treat == 1)
treat
treat <- nsw %>%
filter(treat == 1)
untreat <- nsw %>%
filter(treat == 0)
mean(nsw$re1978) - mean(nsw$re1978)
mean(nsw$re1978)
untreat <- nsw %>%
filter(treat == 0)
treat$re1978
treat
mean(treat$re1978)
treat <- nsw %>%
filter(treat == 1) %>%
mutate(re1978 = as.numeric(re1978))
treat <- nsw %>%
filter(treat == 1) %>%
mutate(re1978 = as.numeric(as.character(re1978)))
treat <- nsw %>%
filter(treat == 1)
untreat <- nsw %>%
filter(treat == 0)
mean(treat$re78) - mean(untreat$re78)
set.seed(123)
n <- 10000
ate_boot <- rep(NA, n)
for(i in 1:n){
sample <-  nsw[sample(1:nrow(nsw), nrow(nsw), replace = T),]
treat <- sample %>%
filter(treat == 1)
untreat <- sample %>%
filter(treat == 0)
ate_boot[i] <- mean(treat$re78) - mean(untreat$re78)
}
lower.bound <- quantile(ate_boot, 0.025)
upper.bound <- quantile(ate_boot, 0.975)
print(paste0("The Bootstrapped 95% CI is {", lower.bound,", ",upper.bound,"}"))
model <- lm(re78 ~ treat, data = nsw)
summary(model)
predicted_re78 <- data.frame(re78 =  predict(model), treat = nsw$treat)
ggplot(nsw, aes(x = treat, y = re78)) +
geom_point(aes(x = treat, y = re78, color = factor(treat)),
alpha = 0.3) +
geom_line(data = predicted_re78,
aes(x = treat, y = re78),color='darkorange', lwd= 1) +
labs(
title = "Treatment vs. 1978 Earnings",
x = "Treatment",
y = "1978 Earnings",
color = "Treatment") +
theme_minimal()
model <- lm(re78 ~ treat + married, data = nsw)
summary(model)
df <- nsw %>%
group_by(nodeg, ) %>%
summarise(
n_treat = sum(treat == 1),
n_untreat = sum(treat == 0),
mean_treat_re78 = mean(re78[bintreat == 1]),
mean_untreat_re78 = mean(re[bintreat == 0]),
CATE_78 = mean_treat_re78 - mean_untreat_re78
) %>%
ungroup()
df <- nsw %>%
group_by(nodeg, ) %>%
summarise(
n_treat = sum(treat == 1),
n_untreat = sum(treat == 0),
mean_treat_re78 = mean(re78[treat == 1]),
mean_untreat_re78 = mean(re[treat == 0]),
CATE_78 = mean_treat_re78 - mean_untreat_re78
) %>%
ungroup()
df <- nsw %>%
group_by(nodeg, ) %>%
summarise(
n_treat = sum(treat == 1),
n_untreat = sum(treat == 0),
mean_treat_re78 = mean(re78[treat == 1]),
mean_untreat_re78 = mean(re78[treat == 0]),
CATE_78 = mean_treat_re78 - mean_untreat_re78
) %>%
ungroup()
df$CATE[df$nodeg == 1]
df <- nsw %>%
group_by(nodeg, ) %>%
summarise(
n_treat = sum(treat == 1),
n_untreat = sum(treat == 0)
df
df <- nsw %>%
group_by(nodeg) %>%
summarise(
N_Treated = sum(treat == 1),
N_Control = sum(treat == 0),
Mean_Treated = mean(re78[treat == 1]),
Mean_Control = mean(re78[treat == 0]),
CATE = Mean_Treated - Mean_Control
) %>%
ungroup()
df$CATE[df$sex == "female"]
df
df <- nsw %>%
group_by(nodeg) %>%
summarise(
N_Treated = sum(treat == 1),
N_Control = sum(treat == 0),
Mean_Treated = mean(re78[treat == 1]),
Mean_Control = mean(re78[treat == 0]),
CATE = Mean_Treated - Mean_Control
) %>%
ungroup()
df
df <- df %>%
group_by(nodeg) %>%
mutate(CATE_s = ((N_Treated/sum(N_Treated + N+Control))*CATE) + ((N_Control/sum(N_Treated + N+Control))*CATE))
df <- df %>%
group_by(nodeg) %>%
mutate(CATE_s = ((N_Treated/sum(N_Treated+N_Control))*CATE) + ((N_Control/sum(N_Treated+N_Control))*CATE))
df
CATE_nodeg <- df %>%
filter(nodeg == 0)
CATE_nodeg
df <- nsw %>%
group_by(nodeg) %>%
summarise(
N_Treated = sum(treat == 1),
N_Control = sum(treat == 0),
Mean_Treated = mean(re78[treat == 1]),
Mean_Control = mean(re78[treat == 0]),
CATE = Mean_Treated - Mean_Control
) %>%
ungroup()
df
CATE_nodeg <- df %>%
filter(nodeg == 0)
CATE_nodeg
df <- nsw %>%
group_by(nodeg) %>%
summarise(
N_Total = n(),
N_Treated = sum(treat == 1),
N_Control = sum(treat == 0),
Mean_Treated = mean(re78[treat == 1]),
Mean_Control = mean(re78[treat == 0]),
CATE = Mean_Treated - Mean_Control
) %>%
ungroup()
df
df <- df %>%
mutate(CATE_standard = (N_Total/sum(N_Total))*CATE)
df
df <- df %>%
mutate(CATE_standard = (N_Total/sum(N_Total))*CATE)
sum(df$CATE_standard)
model <- lm(re78 ~ treat + nodeg + treat*nodeg, data = nsw)
summary(model)
model <- lm(re78 ~ treat + nodeg, data = nsw)
summary(model)
model <- lm(re78 ~ treat + nodeg + treat*nodeg, data = nsw)
summary(model)
boot_fn <- function(data, indices) {
d <- data[indices, ]
fit <- lm(re78 ~ treat + nodeg + treat*nodeg, data = d)
return(coef(fit))
}
set.seed(123)
boot_results <- boot(data = nsw, statistic = boot_fn, R = 10000)
boot_results
boot.ci(boot_results, type = "perc", index = 2)
boot.ci(boot_results, type = "perc", index = 2+4)
boot.ci(boot_results, type = "perc", index = 4)
table_bycontinent <- tableby(continent ~
visa_type + bin_rejection + bin_reapply + bias + bin_help +
rate_help, data = survey_immigrant)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(datasets)
library(arsenal)
library(r2country)
table_bycontinent <- tableby(continent ~
visa_type + bin_rejection + bin_reapply + bias + bin_help +
rate_help, data = survey_immigrant)
survey <- read.csv("C:/Users/13015/OneDrive - Emory University/Documents/Sainab's Ulysses Project/sainab_survey.csv")
head(survey)
summary(survey)
## renaming columns
survey <- survey %>%
rename(date = Timestamp,
## binary immigration variable yes/no
bin_immigrant = Are.you.or.any.members.of.your.family.immigrants.,
country = Which.country.are.you.or.family.from.,
## type of visa variable
visa_type = What.type.of.visa.s..did.you.or.your.family.apply.for.when.immigrating.,
## binary experience rejection variable yes/no
bin_rejection = Have.you.or.your.family.ever.experienced.a.visa.rejection.,
## binary successful reapplication variable yes/no
bin_reapply = If.your.visa.was.denied..were.you.able.to.appeal.the.decision.or.reapply.successfully.,
## effect of country of origin on visa applicaton
bias = Do.you.believe.that.your.or.your.family.s.country.of.origin.influenced.the.decision.to.grant.or.deny.your.visa.,
## binary professional help variable yes/no
bin_help = Did.you.or.your.family.work.with.a.lawyer.or.immigration.specialist.during.your.visa.application.process.,
## rating of professional help variable
rate_help = If.you.worked.with.a.legal.expert..how.would.you.rate.the.experience.in.terms.of.helpfulness.in.navigating.the.visa.process..,
challenge = What.were.the.biggest.challenges.you.or.your.family.faced.during.the.visa.application.process.,
interview = If.you.are.willing.to.participate.in.an.interview..please.provide.your.contact.information.below.)
head(survey)
summary(survey)
table <- tableby(~ bin_immigrant, data = survey)
summary(table)
survey <- survey %>%
mutate(country = tolower(country)) %>%
mutate(visa_type = tolower(visa_type)) %>%
separate_rows(country, sep = " + ") %>%
separate_rows(country, sep = " and ") %>%
separate_rows(country, sep = ",") %>%
separate_rows(country, sep = "/") %>%
separate_rows(country, sep = " \\+ ") %>%
mutate(country = case_when(
country == "brazillll" ~ "brazil",
country == "brazilllll" ~ "brazil",
country == "hounduras" ~ "honduras",
country == "korea (dad immigrated from belgium)" ~ "belgium",
country == "méxico" ~ "mexico",
country == "my moms side is from el salvador" ~ "el salvador",
country == "phillipines" ~ "philippines",
TRUE ~ country)) %>%
mutate(visa_type = case_when(
visa_type == "i think it was a green card" ~ "green card",
visa_type == "im not sure" ~ "do not know/prefer not to say",
visa_type == "immigrant visa" ~ "immigrant visa (iv)",
visa_type == "siv" ~ "special immigrant visa (siv)",
visa_type == "work and tourist visas" ~ "working holiday visa (whv)",
TRUE ~ visa_type))
data(country_names)
data(country_continent)
head(country_names)
head(country_continent)
df <- right_join(country_names, country_continent, by = "ID")
df <- df %>%
select(-ID) %>%
mutate(country = tolower(name)) %>%
mutate(continent = tolower(continent)) %>%
select(-name)
print(df)
## essentially making everything lowercase
survey_join <- survey %>%
left_join(df, by = "country") %>%
select(-date, -challenge, -interview) %>%
mutate(bin_immigrant = case_when(
bin_immigrant == "Yes" ~ "yes",
bin_immigrant == "No" ~ "no",
TRUE ~ NA
)) %>%
mutate(bin_rejection = case_when(
bin_rejection == "Yes" ~ "yes",
bin_rejection == "No" ~ "no",
TRUE ~ NA
)) %>%
mutate(bin_reapply = case_when(
bin_reapply == "Yes" ~ "yes",
bin_reapply == "No" ~ "no",
TRUE ~ NA
)) %>%
mutate(bin_help = case_when(
bin_help == "Yes" ~ "yes",
bin_help == "No" ~ "no",
TRUE ~ NA
)) %>%
mutate(bias = tolower(bias)) %>%
mutate(bias = case_when(
bias == "maybe" ~ "unsure",
bias == "i don't know" ~ "unsure",
bias == "yes" ~ "yes",
bias == "no" ~ "no",
TRUE ~ NA
))
head(survey_join)
## only select respondents that responded "yes" to immigration
survey_immigrant <- survey_join %>%
filter(bin_immigrant == "yes") %>%
select(-bin_immigrant)
print(survey_immigrant)
table_bycontinent <- tableby(continent ~
visa_type + bin_rejection + bin_reapply + bias + bin_help +
rate_help, data = survey_immigrant)
summary(table_bycontinent)
